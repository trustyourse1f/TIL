변수
변수는 값을 저장하는 공간
변수는 메모리에 만들어 진다.
프로그래밍에서 변수는 어떠한 값을 저장하는 장소라는 뜻
변수에 값이 저장되는 공간 : 메모리
변수에 값을 넣으라고 선언하는 순간 물리적으로 메모리 어딘가에 물리적인 공간을 확보
할 수 있게 운영체제와 파이썬 인터프리터가 협력하여 메모리 저장위치를 할당함.
이 위치를 메모리 주소라고 한다.

변수는 메모리에 값을 저장해 놓은 위치의 이름
변수는 복수의 위치를 이야기 해서는 안된다.

선언방식
변수명=값
변수명1,변수명2=값1,값2
변수명1=변수명2=값

변수이름은 의미 있는 이름을 사용, 소문자와 대문자는 서로 다르게 취급, 변수의 이름은 영문자와 숫자, 밑줄(_)
로 이루어 진다. 변수의 이름 중간에 공백이 들어가면 안된다.

식별자 : 사용자가 필요에 따라 이름을 만들어 사용하는 단어
        대표적으로 변수명이나 함수명 등이 해당됨.

식별자 작성 규칙
-영문 대문자와 소문자, 숫자, 밑줄을 포함
-중간에 공백 사용 불가
-첫 글자로 숫자를 사용불가
-대문자와 소문자를 구분, 키워드를 사용할 수 없음

자료형
-기본자료형 : 기본 데이터 타입을 리터럴 데이터
-정수형 : 자연수를 포함, 값의 영역이 정수로 한정된 값
-실수형 : 소수점이 포함된 값
-문자형 : 값이 문자로 출력되는 자료형
-불린형 : 논리형으로, 참(True) 또는 거짓(False)을 표현할 때 사용.

문자열 : 따옴표로 묶여 있는 값, 문자들의 집합(불변 값의 집합)
리스트 : 정수, 실수 및 문자열 등 자료들의 집합(가변 값의 집합)
튜플 : 정수, 실수 및 문자열 등 자료들의 집합(불변 값의 집합)
사전(딕셔너리) : 정수 실수 및 문자열 등 자료들의 집합(키{중복불가}와 값이 쌍으로 존재)
집합(세트) : 정수, 실수, 문자열 등 자료들의 집합(키{중복불가}만 존재)

표준입출력
print(출력문자열)
출력 문자열 특성:
문자열 속에 '기호가 있는 경우에는 ""로, "기호가 있는 경우에는 ''를 사용하면 편리
콤마(,)로 문자열을 나열할 경우 공백(기본값)이 자동으로 추가됨
더하기(+)기호 및 공백없이 문자열 연결 가능
긴 문자열은 \기호를 사용하여 여러 줄로 작성 가능
개행, 공백, 특수기호를 포함하여 입력한 그대로를 화면에 출력하기 위해서는 """ """ 기호 사용
end인자를 사용하면 print함수 마지막 효과를 변경 (기본값은 개행)
sep인자를 사용하면 콤마로 구분된 문자열을 다르게 결합(기본값은 공백)
file인자를 사용하면 출력 결과를 파일, 표준 에러 처리로 전달
이스케이프 문자는 \문자를 사용하여 출력
문자열 객체의 다양한 메소드(함수)를 활용하여 출력모양을 변경 가능
정수, 실수, 불 자료형을 문자열로 변경할 필요없이 바로 출력 가능
(명시적으로 변경하기 위해서는 str()함수를 사용하면 됨)
수식과 리스트 같은 복잡한 내용도 쉽게 출력 가능
3.6버전 이상부터는 f-string기능 존재

print() 
– print(출력대상) – ()안의 출력 대상을 출력
– 출력 시 sep을 이용하여 구분자 생성가능(기본 = 공백) – 출력 시 end를 이용하여 마지막 문자 변경 가능(기본 = 줄변경) – 문자열 출력 시 “~”, ‘~’ 안의 결과를 출력
– “~”내부에는 ‘~’, ‘~’내부에는 “~” 출력 가능
– 동일한 문자열 복수 출력 시 * 이용
– 확장 문자(escape) 출력 가능
– 형식 출력 가능

홑 따옴표를 사용하여 문자열 출력
    print(‘”Hello Python”’)
쌍 따옴표를 사용하여 문자열 출력
    print(“’Hello Python’“)
연산 결과를 출력 하기 위한 방법
    print(10 + 20)  
    print(10 * 20)
쉼표(,)로 문자열 및 연산 결과 등을 구분하여 출력
    print('10 더하기 20 은', 10 + 20)
    print('10 곱하기 20 은', 10 * 20)

이스케이프 문자는 문자열을 출력하기 위해서 사용되는 기능
외의 부가적인 기능을 사용하기 위해 쓰임
    \n : 개행, 커서를 다음 줄의 처음으로 옮김(Enter)
    \t : 수평탭, 커서를 다음 탭으로 옮김(Tab)
    \r : 캐리지 리턴, 커서위치를 현재줄의 처음으로 옮김
    \\ : \문자를 출력할 때 사용
    \" : "문자를 출력할 때 사용
    \' : '문자를 출력할 때 사용

input(입력 문자열)
입력 문자열은 출력 문자열의 특성과 동일
입력된 DATA는 <str>자료형으로 입력
.split(입력구분자)를 이용하여 복수입력 가능(기본 공백)
map(자료형, input(입력문자열).split(입력구분자))로 복수 형 변환 가능